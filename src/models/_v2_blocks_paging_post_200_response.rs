/*
 * F2 Pool API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V2BlocksPagingPost200Response {
    #[serde(rename = "lucky", skip_serializing_if = "Option::is_none")]
    pub lucky: Option<Vec<models::LuckyEntry>>,
    #[serde(rename = "blocklist", skip_serializing_if = "Option::is_none")]
    pub blocklist: Option<Vec<models::Block>>,
    #[serde(rename = "sum", skip_serializing_if = "Option::is_none")]
    pub sum: Option<i32>,
}

impl V2BlocksPagingPost200Response {
    pub fn new() -> V2BlocksPagingPost200Response {
        V2BlocksPagingPost200Response {
            lucky: None,
            blocklist: None,
            sum: None,
        }
    }
}

