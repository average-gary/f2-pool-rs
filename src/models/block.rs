/*
 * F2 Pool API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Block {
    #[serde(rename = "height", skip_serializing_if = "Option::is_none")]
    pub height: Option<i64>,
    #[serde(rename = "block_hash", skip_serializing_if = "Option::is_none")]
    pub block_hash: Option<String>,
    #[serde(rename = "base_reward", skip_serializing_if = "Option::is_none")]
    pub base_reward: Option<f64>,
    #[serde(rename = "total_reward", skip_serializing_if = "Option::is_none")]
    pub total_reward: Option<f64>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i64>,
    #[serde(rename = "settle_timestamp", skip_serializing_if = "Option::is_none")]
    pub settle_timestamp: Option<i64>,
}

impl Block {
    pub fn new() -> Block {
        Block {
            height: None,
            block_hash: None,
            base_reward: None,
            total_reward: None,
            timestamp: None,
            settle_timestamp: None,
        }
    }
}

